<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.UserDao">
    <!--登录时使用：根据用户名查询用户-->
    <select id="findByUsername" resultMap="userMap" parameterType="string">
        select * from sys_user where username = #{username} and status = 1
    </select>

    <!--查询所有-->
    <select id="findAll" resultType="sysUser">
        select * from sys_user
    </select>

    <insert id="save" parameterType="sysUser">
        insert into sys_user values(null,#{username},#{password},#{email},#{phoneNum},#{status})
    </insert>
    <delete id="deleteByUserId" parameterType="int">
       delete from sys_user where id = #{id}
    </delete>
    <!--注册验证：根据用户名查询用户-->
    <select id="findByUsernameCheck" resultType="sysUser" parameterType="string">
        select * from sys_user where username = #{username}
    </select>
    <!--
        如果表的列名与实体类的属性不一致的时候，需要手动映射
        resultMap:手动映射
             id: 唯一标识
             type: 返回值类型（泛型）
    -->
    <resultMap id="userMap" type="sysUser">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="email" column="email"></result>
        <result property="phoneNum" column="phoneNum"></result>
        <result property="password" column="password"></result>
        <result property="status" column="status"></result>
        <!--映射roleList属性:集合类型-->
        <!--collection: 映射集合属性
                property:属性名
                ofType: 集合的泛型
                column: 对应表中某列 - 作为方法的参数
                select : namespace + id = 接口的全名称 + 方法名  = 方法的全名称

            com.itheima.dao.RoleDao.findRolesByUserId(Integer userId)
        -->
        <collection property="roleList" ofType="role"
                 fetchType="lazy"  column="id" select="com.itheima.dao.RoleDao.findRolesByUserId"></collection>
    </resultMap>
    <!--根据id查询-->
    <select id="findById" parameterType="int" resultMap="userMap">
        select * from sys_user where id = #{id}
    </select>
    <!--删除用户已有的角色-->
    <delete id="delRolesFromUser" parameterType="int">
        delete from sys_user_role  where userId = #{userId}
    </delete>
    <!--维护用户和角色新的关系-->
    <insert id="saveRoleToUser" >
        insert into sys_user_role values(#{param1} ,#{param2})
    </insert>
    <!--根据用户名更新用户信息-->
    <update id="updateByUsername" parameterType="sysUser">
        update sys_user set id=#{id},username=#{username},email=#{email},password=#{password},phoneNum=#{phoneNum},status=#{status} where username=#{username}
    </update>
</mapper>