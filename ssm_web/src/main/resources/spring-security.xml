<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--放行登录和错误页面-->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <security:http pattern="/failer.jsp" security="none"></security:http>
    <security:http pattern="/favicon.ico" security="none"></security:http>
    <!--对静态资源放行-->
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <!--
        授权：
           配置拦截的规则
           auto-config="使用自带的页面"
           use-expressions="是否使用spel表达式"，如果使用表达式：hasRole('ROLE_USER')
   -->
    <security:http auto-config="true" use-expressions="true">
        <!-- 配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限 -->
        <security:intercept-url pattern="/**"
                  access="hasAnyRole('ROLE_ADMIN','ROLE_USER_1','ROLE_USER_2','ROLE_USER_3','ROLE_USER_4','ROLE_USER_5')"/>
        <!--配置自定义页面
                login-page：  登录页面
                login-processing-url: 登录的请求路径
                authentication-failure-url: 登录失败后的请求路径
                 default-target-url: 登录成功后进入的路径
        -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             authentication-failure-url="/login.jsp"
                             default-target-url="/index.jsp"></security:form-login>
        <!--关闭跨站请求伪造(csrf)-->
        <security:csrf disabled="true"></security:csrf>

        <!--配置退出功能
            invalidate-session: 刷新session
            logout-success-url： 退出成功后跳转的页面
            logout-url: 退出的请求路径
        -->
        <security:logout invalidate-session="true" logout-success-url="/login.jsp" logout-url="/logout"></security:logout>
        <security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>
    </security:http>



    <!-- 配置认证(登录)信息 : 配置登录信息-->
    <security:authentication-manager>
        <!--认证信息的提供者-->
        <!--
            user-service-ref： 关联一个用户的业务层对象
                UserService必须实现一个接口：UserDetailsService
        -->
        <security:authentication-provider user-service-ref="userService">
            <!--指定加密工具类-->
            <!--
                如果没有指定加密工具类，会自动从容器中查找加密工具类并使用
            -->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
            <!--用户服务信息-->
            <!--<security:user-service>-->
                <!--创建临时的用户对象
                    name： 用户名
                    password:密码  {noop}: 不使用加密数据
                    authorities：  用户的角色
                -->
                <!--<security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>-->
            <!--</security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <!--创建一个加密工具类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>


    <!--配置开启security的注解支持-->
    <security:global-method-security secured-annotations="enabled"/>
</beans>